version: '3.8'

services:
  traefik:
    container_name: 'traefik'
    image: 'traefik:latest'
    restart: 'unless-stopped'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './traefik/:/etc/traefik/:ro'
      - '${CERT_DIR:?err}/:/etc/certs/:ro'
      - '${LOG_DIR:?err}/traefik/:/var/log/'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.traefik.loadbalancer.server.port=8080'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.tls=true'

  demo:
    container_name: 'demo'
    image: 'nginxdemos/hello'
    restart: 'unless-stopped'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.demo.loadbalancer.server.port=80'
      - 'traefik.http.routers.demo.entrypoints=websecure'
      - 'traefik.http.routers.demo.tls=true'

  pihole:
    container_name: 'pihole'
    image: 'pihole/pihole:latest'
    restart: 'unless-stopped'
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp'
    volumes:
      - '${DATA_DIR:?err}/pihole/:/etc/pihole/'
      - '${DATA_DIR:?err}/pihole-dnsmasq/:/etc/dnsmasq.d/'
      - './pihole/resolv.conf:/etc/resolv.conf:ro'
      - './pihole/adlists.list:/etc/pihole/adlists.list:ro'
      - './pihole/custom.list:/etc/pihole/custom.list:ro'
    environment:
      ServerIP: ${LOCAL_IP}
      TZ: '${TIMEZONE}'
      DNSSEC: 'True'
      DNS1: '1.0.0.1'
      DNS2: '1.1.1.1'
      WEBPASSWORD: '${PIHOLE_PASSWORD}'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.pihole.loadbalancer.server.port=80'
      - 'traefik.http.routers.pihole.entrypoints=websecure'
      - 'traefik.http.routers.pihole.tls=true'

  home-assistant:
    container_name: 'home-assistant'
    image: 'homeassistant/home-assistant:stable'
    restart: 'unless-stopped'
    volumes:
      - '${DATA_DIR:?err}/home-assistant/:/config/'
      - './home-assistant/configuration.yaml:/config/configuration.yaml:ro'
    environment:
      TZ: '${TIMEZONE}'
      DATABASE_CONNECTION: 'mysql://home-assistant-user:${HA_MYSQL_PASSWORD}@home-assistant-db/home-assistant-db?charset=utf8'
    depends_on:
      - 'home-assistant-db'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.home-assistant.loadbalancer.server.port=8123'
      - 'traefik.http.routers.home-assistant.entrypoints=websecure'
      - 'traefik.http.routers.home-assistant.tls=true'

  home-assistant-db:
    container_name: 'home-assistant-db'
    image: 'mariadb:latest'
    restart: 'unless-stopped'
    volumes:
      - '${DATA_DIR:?err}/home-assistant-db/:/var/lib/mysql'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: 'home-assistant-db'
      MYSQL_USER: 'home-assistant-user'
      MYSQL_PASSWORD: '${HA_MYSQL_PASSWORD}'

  phpmyadmin:
    container_name: 'phpmyadmin'
    image: 'phpmyadmin:latest'
    restart: 'unless-stopped'
    environment:
      PMA_HOSTS: 'home-assistant-db'
    depends_on:
      - 'home-assistant-db'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.phpmyadmin.loadbalancer.server.port=80'
      - 'traefik.http.routers.phpmyadmin.entrypoints=websecure'
      - 'traefik.http.routers.phpmyadmin.tls=true'

  watchtower:
    container_name: 'watchtower'
    image: 'containrrr/watchtower:latest'
    restart: 'unless-stopped'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    environment:
      TZ: '${TIMEZONE}'
      WATCHTOWER_CLEANUP: 'true'
      WATCHTOWER_MONITOR_ONLY: 'false'
      WATCHTOWER_SCHEDULE: '0 0 2 * * *'
      WATCHTOWER_NOTIFICATIONS: 'slack'
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: '${WT_SLACK_URL}'

  portainer:
    container_name: 'portainer'
    image: 'portainer/portainer-ce'
    restart: 'unless-stopped'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '${DATA_DIR:?err}/portainer/:/data/'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
      - 'traefik.http.routers.portainer.entrypoints=websecure'
      - 'traefik.http.routers.portainer.tls=true'

  dozzle:
    container_name: 'dozzle'
    image: 'amir20/dozzle:latest'
    restart: 'unless-stopped'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.dozzle.loadbalancer.server.port=8080'
      - 'traefik.http.routers.dozzle.entrypoints=websecure'
      - 'traefik.http.routers.dozzle.tls=true'
